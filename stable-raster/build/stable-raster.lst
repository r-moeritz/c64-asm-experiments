Sections:
00: "org0001:801" (801-B00)


Source: "src/stable-raster.asm"
                        	     1:         ;;  Select the video timing (processor clock cycles per raster line)
                        	     2: ;; CYCLES: .equ 65    ; 6567R8 and above, NTSC-M
                        	     3: ;; CYCLES: .equ 64    ; 6567R5 6A, NTSC-M
                        	     4: CYCLES: .equ 63    ; 6569 (all revisions), PAL-B
                        	     5: 
                        	     6: cinv:   .equ $314
                        	     7: cnmi:   .equ $318
                        	     8: sp0ptr: .equ $07f8   ; sprite 0 pointer
                        	     9: raslin: .equ 52      ; start of raster interrupt
                        	    10: m:      .ezp $fb     ; zero page variable
                        	    11: 
                        	    12:         ;; VIC-II registers
                        	    13: vic:    .equ $d000
                        	    14: sp0x:   .equ vic
                        	    15: sp0y:   .equ vic + $01
                        	    16: scroly: .equ vic + $11
                        	    17: raster: .equ vic + $12
                        	    18: spena:  .equ vic + $15
                        	    19: scrolx: .equ vic + $16
                        	    20: vicirq: .equ vic + $19
                        	    21: irqmsk: .equ vic + $1a
                        	    22: 
                        	    23:         ;; CIA 1 registers
                        	    24: cia1:   .equ $dc00
                        	    25: ci1pra: .equ cia1
                        	    26: ci1icr: .equ cia1 + $0d
                        	    27: 
                        	    28:         ;; CIA 2 registers
                        	    29: cia2:   .equ $dd00
                        	    30: ti2alo: .equ cia2 + $04
                        	    31: ti2ahi: .equ cia2 + $05
                        	    32: ci2icr: .equ cia2 + $0d
                        	    33: ci2cra: .equ cia2 + $0e
                        	    34:                 
                        	    35:         .org $0801
                        	    36:         
                        	    37: basic:
00:0801 0B08            	    38:         .word :+,10
00:0803 0A00
00:0805 9E              	    39:         .byte $9e
00:0806 32303631        	    40:         .string "2061"
00:080A 00
00:080B 0000            	    41: :       .word 0
                        	    42: 
                        	    43: start:
00:080D 4C1308          	    44:     jmp install
00:0810 4C7908          	    45:     jmp deinstall
                        	    46: 
                        	    47: install:                ;install the raster routine
00:0813 202209          	    48:     jsr restore         ;disable the Restore key (disable NMI interrupts)
                        	    49: checkirq:
00:0816 AD1403          	    50:     lda cinv            ;check the original IRQ vector
00:0819 AE1503          	    51:     ldx cinv+1          ;(to avoid multiple installation)
00:081C C99A            	    52:     cmp #<irq1
00:081E D004            	    53:     bne irqinit
00:0820 E008            	    54:     cpx #>irq1
00:0822 F011            	    55:     beq skipinit
                        	    56: irqinit:
00:0824 78              	    57:     sei
00:0825 8DBE08          	    58:     sta oldirq          ;store the old IRQ vector
00:0828 8EBF08          	    59:     stx oldirq+1
00:082B A99A            	    60:     lda #<irq1
00:082D A208            	    61:     ldx #>irq1
00:082F 8D1403          	    62:     sta cinv            ;set the new interrupt vector
00:0832 8E1503          	    63:     stx cinv+1
                        	    64: skipinit:
00:0835 A91B            	    65:     lda #$1b
00:0837 8D11D0          	    66:     sta scroly          ;set the raster interrupt location
00:083A A934            	    67:     lda #raslin
00:083C 8D12D0          	    68:     sta raster
00:083F A20E            	    69:     ldx #$e
00:0841 18              	    70:     clc
00:0842 6903            	    71:     adc #3
00:0844 A8              	    72:     tay
00:0845 A900            	    73:     lda #0
00:0847 85FB            	    74:     sta m
                        	    75: siloop: 
00:0849 A5FB            	    76:     lda m
00:084B 9D00D0          	    77:     sta sp0x,x         ;set the sprite X
00:084E 6918            	    78:     adc #24
00:0850 85FB            	    79:     sta m
00:0852 98              	    80:     tya
00:0853 9D01D0          	    81:     sta sp0y,x         ;and Y coordinates
00:0856 A928            	    82:     lda #sp0def/64
00:0858 9DF807          	    83:     sta sp0ptr,x        ;and sprite pointers
00:085B CA              	    84:     dex
00:085C CA              	    85:     dex
00:085D 10EA            	    86:     bpl siloop
00:085F A97F            	    87:     lda #$7f
00:0861 8D0DDC          	    88:     sta ci1icr          ;disable timer interrupts
00:0864 8D0DDD          	    89:     sta ci2icr
00:0867 A201            	    90:     ldx #1
00:0869 8E1AD0          	    91:     stx irqmsk          ;enable raster interrupt
00:086C AD0DDC          	    92:     lda ci1icr          ;acknowledge CIA interrupts
00:086F 4E19D0          	    93:     lsr vicirq          ;and video interrupts
00:0872 A0FF            	    94:     ldy #$ff
00:0874 8C15D0          	    95:     sty spena           ;turn on all sprites
00:0877 58              	    96:     cli
00:0878 60              	    97:     rts
                        	    98: 
                        	    99: deinstall:
00:0879 78              	   100:     sei                 ;disable interrupts
00:087A A91B            	   101:     lda #$1b
00:087C 8D11D0          	   102:     sta scroly          ;restore text screen mode
00:087F A981            	   103:     lda #$81
00:0881 8D0DDC          	   104:     sta ci1icr          ;enable timer A interrupts on CIA 1
00:0884 A900            	   105:     lda #0
00:0886 8D1AD0          	   106:     sta irqmsk          ;disable raster interrupts
00:0889 ADBE08          	   107:     lda oldirq
00:088C 8D1403          	   108:     sta cinv            ;restore old IRQ vector
00:088F ADBF08          	   109:     lda oldirq+1
00:0892 8D1503          	   110:     sta cinv+1
00:0895 2C0DDD          	   111:     bit ci2icr          ;re-enable NMI interrupts
00:0898 58              	   112:     cli
00:0899 60              	   113:     rts
                        	   114: 
                        	   115:     ;;  Auxiliary raster interrupt (for synchronization)
                        	   116: irq1:
                        	   117:     ;;  irq (event)   ; > 7 + at least 2 cycles of last instruction (9 to 16 total)
                        	   118:     ;;  pha           ; 3
                        	   119:     ;;  txa           ; 2
                        	   120:     ;;  pha           ; 3
                        	   121:     ;;  tya           ; 2
                        	   122:     ;;  pha           ; 3
                        	   123:     ;;  tsx           ; 2
                        	   124:     ;;  lda $0104,x   ; 4
                        	   125:     ;;  and #xx       ; 2
                        	   126:     ;;  beq           ; 3
                        	   127:     ;;  jmp (cinv)    ; 5
                        	   128:     ;;  ---
                        	   129:     ;;  38 to 45 cycles delay at this stage
00:089A A9C0            	   130:     lda #<irq2
00:089C 8D1403          	   131:     sta cinv
00:089F A908            	   132:     lda #>irq2
00:08A1 8D1503          	   133:     sta cinv+1
00:08A4 EA              	   134:     nop                 ;waste at least 12 cycles
00:08A5 EA              	   135:     nop                 ;(up to 64 cycles delay allowed here)
00:08A6 EA              	   136:     nop
00:08A7 EA              	   137:     nop
00:08A8 EA              	   138:     nop
00:08A9 EA              	   139:     nop
00:08AA EE12D0          	   140:     inc raster          ;at this stage, raster has already been incremented by one
00:08AD A901            	   141:     lda #1
00:08AF 8D19D0          	   142:     sta vicirq          ;acknowledge the first raster interrupt
00:08B2 58              	   143:     cli                 ;enable interrupts (the second interrupt can now occur)
00:08B3 A009            	   144:     ldy #9
00:08B5 88              	   145: :   dey
00:08B6 D0FD            	   146:     bne :-              ;delay
00:08B8 EA              	   147:     nop                 ;the second interrupt will occur while executing these
00:08B9 EA              	   148:     nop                 ;two-cycle instructions
00:08BA EA              	   149:     nop
00:08BB EA              	   150:     nop
00:08BC EA              	   151:     nop
                        	   152: oldirq: .equ * + 1      ;placeholder for self-modifying code
00:08BD 4CBD08          	   153:     jmp *               ;return to the original interrupt
                        	   154: 
                        	   155:     ;;  Main raster interrupt
                        	   156: irq2:
                        	   157:     ;;  irq (event)   ; 7 + 2 or 3 cycles of last instruction (9 or 10 total)
                        	   158:     ;;  pha           ; 3
                        	   159:     ;;  txa           ; 2
                        	   160:     ;;  pha           ; 3
                        	   161:     ;;  tya           ; 2
                        	   162:     ;;  pha           ; 3
                        	   163:     ;;  tsx           ; 2
                        	   164:     ;;  lda $0104,x   ; 4
                        	   165:     ;;  and #xx       ; 2
                        	   166:     ;;  beq           ; 3
                        	   167:     ;;  jmp (cinv)    ; 5
                        	   168:     ;;  ---
                        	   169:     ;;  38 or 39 cycles delay at this stage
00:08C0 A99A            	   170:     lda #<irq1
00:08C2 8D1403          	   171:     sta cinv
00:08C5 A908            	   172:     lda #>irq1
00:08C7 8D1503          	   173:     sta cinv+1
00:08CA AE12D0          	   174:     ldx raster
00:08CD EA              	   175:     nop
                        	   176:     .if CYCLES - 63
                        	   177:     .if CYCLES - 64
                        	   178:     nop                 ;6567R8, 65 cycles/line
                        	   179:     bit $24
                        	   180:     .else
                        	   181:     nop                 ;6567R56A, 64 cycles/line
                        	   182:     nop
                        	   183:     .endif
                        	   184:     else
00:08CE 2424            	   185:     bit $24             ;6569, 63 cycles/line
                        	   186:     .endif
00:08D0 EC12D0          	   187:     cpx raster          ;the comparison cycle is executed CYCLES or CYCLES+1 cycles
                        	   188:                         ;after the interrupt has occurred
00:08D3 F000            	   189:     beq *+2             ;delay by one cycle if raster hadn't changed
                        	   190:     ;;  Now exactly CYCLES+3 cycles have passed since the interrupt
00:08D5 CA              	   191:     dex
00:08D6 CA              	   192:     dex
00:08D7 8E12D0          	   193:     stx raster          ;restore original raster interrupt position
00:08DA A201            	   194:     ldx #1
00:08DC 8E19D0          	   195:     stx vicirq          ;acknowledge the raster interrupt
00:08DF A202            	   196:     ldx #2
00:08E1 CA              	   197: :   dex
00:08E2 D0FD            	   198:     bne :-              ;delay
00:08E4 EA              	   199:     nop
00:08E5 EA              	   200:     nop
00:08E6 A914            	   201:     lda #20             ;set the amount of raster lines-1 for the loop
00:08E8 85FB            	   202:     sta m
00:08EA A2C8            	   203:     ldx #$c8
                        	   204: irqloop:
00:08EC A002            	   205:     ldy #2
00:08EE 88              	   206: :   dey
00:08EF D0FD            	   207:     bne :-              ;delay
00:08F1 CE16D0          	   208:     dec scrolx          ;narrow the screen (exact timing required)
                        	   209:     ;; 3s4s5s6s7srrrrrgggggggggggggggggggggggggggggggggggggggg--||0s1s2s Phi-1 VIC-II
                        	   210:     ;; ssssssssss                                               ||ssssss Phi-2 VIC-II
                        	   211:     ;; ==========xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx||XXX====== Phi-2 6510
                        	   212:     ;;           ^ now we are here
00:08F4 8E16D0          	   213:     stx scrolx          ;expand the screen
                        	   214:     .if CYCLES - 63
                        	   215:     .if CYCLES - 64
                        	   216:     bit $24             ;6567R8
                        	   217:     .else
                        	   218:     nop                 ;6567R56A
                        	   219:     .endif
                        	   220:     .else
00:08F7 EA              	   221:     nop                 ;6569
                        	   222:     .endif
00:08F8 C6FB            	   223:     dec m
00:08FA 3023            	   224:     bmi endirq
00:08FC 18              	   225:     clc
00:08FD AD11D0          	   226:     lda scroly
00:0900 ED12D0          	   227:     sbc raster
00:0903 2907            	   228:     and #7
00:0905 D0E5            	   229:     bne irqloop         ;this instruction takes 4 cycles instead of 3
                        	   230:                         ;because the page boundary is crossed
                        	   231: badline:
00:0907 C6FB            	   232:     dec m
00:0909 EA              	   233:     nop
00:090A EA              	   234:     nop
00:090B EA              	   235:     nop
00:090C EA              	   236:     nop
00:090D CE16D0          	   237:     dec scrolx
                        	   238:     ;; 3s4s5s6s7srrrrrgggggggggggggggggggggggggggggggggggggggg--||0s1s2s Phi-1 VIC-II
                        	   239:     ;; ssssssssss    cccccccccccccccccccccccccccccccccccccccc   ||ssssss Phi-2 VIC-II
                        	   240:     ;; ==========xXXX========================================||***====== Phi-2 6510
                        	   241:     ;;           ^ we are here
00:0910 8E16D0          	   242:     stx scrolx
                        	   243:     ;; 3s4s5s6s7srrrrrgggggggggggggggggggggggggggggggggggggggg--||0s1s2s Phi-1 VIC-II
                        	   244:     ;; ssssssssss                                               ||ssssss Phi-2 VIC-II
                        	   245:     ;; ==========xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx||XXX====== Phi-2 6510
                        	   246:     ;;           ^ ^^- we are here (6569)
                        	   247:     ;;           | \- or here (6567R56A)
                        	   248:     ;;           \- or here (6567R8)
00:0913 A002            	   249:     ldy #2
00:0915 88              	   250: :   dey
00:0916 D0FD            	   251:     bne :-              ;delay
00:0918 EA              	   252:     nop
00:0919 EA              	   253:     nop
                        	   254:     .if CYCLES - 63
                        	   255:     .if CYCLES - 64
                        	   256:     nop                 ;6567R8, 65 cycles/line
                        	   257:     nop
                        	   258:     nop
                        	   259:     .else
                        	   260:     bit $24             ;6567R56A, 64 cycles/line
                        	   261:     .endif
                        	   262:     .else
00:091A EA              	   263:     nop                 ;6569, 63 cycles/line
                        	   264:     .endif
00:091B C6FB            	   265:     dec m
00:091D 10CD            	   266:     bpl irqloop         ;this is a 4-cycle branch (page boundary crossed)
                        	   267: endirq:
00:091F 4C81EA          	   268:     jmp $ea81           ;return to the auxiliary raster interrupt
                        	   269: 
                        	   270: restore:                ;disable the Restore key
00:0922 AD1803          	   271:     lda cnmi
00:0925 AC1903          	   272:     ldy cnmi+1
00:0928 48              	   273:     pha
00:0929 A947            	   274:     lda #<nmi           ;set the NMI vector
00:092B 8D1803          	   275:     sta cnmi
00:092E A909            	   276:     lda #>nmi
00:0930 8D1903          	   277:     sta cnmi+1
00:0933 A281            	   278:     ldx #$81
00:0935 8E0DDD          	   279:     stx ci2icr          ;enable CIA 2 Timer A interrupt
00:0938 A200            	   280:     ldx #0
00:093A 8E05DD          	   281:     stx ti2ahi
00:093D E8              	   282:     inx
00:093E 8E04DD          	   283:     stx ti2alo          ;prepare Timer A to count from 1 to 0
00:0941 A2DD            	   284:     ldx #$dd
00:0943 8E0EDD          	   285:     stx ci2cra          ;cause an interrupt
                        	   286: nmi: .equ * + 1
00:0946 A940            	   287:     lda #$40            ;RTI placeholder
00:0948 68              	   288:     pla
00:0949 8D1803          	   289:     sta cnmi
00:094C 8C1903          	   290:     sty cnmi+1          ;restore original NMI vector (although it won't be used)
00:094F 60              	   291:     rts
                        	   292: 
                        	   293:         ;; Sprite shape definitions
                        	   294:         .align 8
00:0A00 FF              	   295: sp0def: .blk 57,$ff
00:0A01 *
00:0A39 00              	   296:         .blk 6,$00
00:0A3A *
                        	   297:         .align 8
                        	   298: 


Symbols by name:
badline                          A:0907
basic                            A:0801
checkirq                         A:0816
ci1icr                           E:DC0D
ci2cra                           E:DD0E
ci2icr                           E:DD0D
cia1                             E:DC00
cia2                             E:DD00
cinv                             E:0314
cnmi                             E:0318
CYCLES                           E:003F
deinstall                        A:0879
endirq                           A:091F
install                          A:0813
irq1                             A:089A
irq2                             A:08C0
irqinit                          A:0824
irqloop                          A:08EC
irqmsk                           E:D01A
m                                E:00FB
nmi                              E:0947
oldirq                           E:08BE
raslin                           E:0034
raster                           E:D012
restore                          A:0922
scrolx                           E:D016
scroly                           E:D011
siloop                           A:0849
skipinit                         A:0835
sp0def                           A:0A00
sp0ptr                           E:07F8
sp0x                             E:D000
sp0y                             E:D001
spena                            E:D015
start                            A:080D
ti2ahi                           E:DD05
ti2alo                           E:DD04
vic                              E:D000
vicirq                           E:D019

Symbols by value:
0034 raslin
003F CYCLES
00FB m
0314 cinv
0318 cnmi
07F8 sp0ptr
0801 basic
080D start
0813 install
0816 checkirq
0824 irqinit
0835 skipinit
0849 siloop
0879 deinstall
089A irq1
08BE oldirq
08C0 irq2
08EC irqloop
0907 badline
091F endirq
0922 restore
0947 nmi
0A00 sp0def
D000 sp0x
D000 vic
D001 sp0y
D011 scroly
D012 raster
D015 spena
D016 scrolx
D019 vicirq
D01A irqmsk
DC00 cia1
DC0D ci1icr
DD00 cia2
DD04 ti2alo
DD05 ti2ahi
DD0D ci2icr
DD0E ci2cra
