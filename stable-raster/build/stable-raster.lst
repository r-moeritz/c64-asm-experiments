Sections:
00: "org0001:801" (801-B00)


Source: "src/stable-raster.asm"
                        	     1:         ;;  Select the video timing (processor clock cycles per raster line)
                        	     2: ;; CYCLES: .equ 65    ; 6567R8 and above, NTSC-M
                        	     3: ;; CYCLES: .equ 64    ; 6567R5 6A, NTSC-M
                        	     4: CYCLES: .equ 63    ; 6569 (all revisions), PAL-B
                        	     5: 
                        	     6: cinv:   .equ $314
                        	     7: cnmi:   .equ $318
                        	     8: sp0ptr: .equ $07f8   ; sprite 0 pointer
                        	     9: raslin: .equ 52      ; start of raster interrupt
                        	    10: m:      .ezp $fb     ; zero page variable
                        	    11: 
                        	    12:         ;; VIC-II registers
                        	    13: vic:    .equ $d000
                        	    14: scroly: .equ vic + $11
                        	    15: raster: .equ vic + $12
                        	    16: spena:  .equ vic + $15
                        	    17: scrolx: .equ vic + $16
                        	    18: vicirq: .equ vic + $19
                        	    19: irqmsk: .equ vic + $1a
                        	    20: 
                        	    21:         ;; CIA 1 registers
                        	    22: cia1:   .equ $dc00
                        	    23: ci1pra: .equ cia1
                        	    24: ci1icr: .equ cia1 + $0d
                        	    25: 
                        	    26:         ;; CIA 2 registers
                        	    27: cia2:   .equ $dd00
                        	    28: ti2alo: .equ cia2 + $04
                        	    29: ti2ahi: .equ cia2 + $05
                        	    30: ci2icr: .equ cia2 + $0d
                        	    31: ci2cra: .equ cia2 + $0e
                        	    32:                 
                        	    33:         .org $0801
                        	    34:         
                        	    35: basic:
00:0801 0B08            	    36:         .word :+,10
00:0803 0A00
00:0805 9E              	    37:         .byte $9e
00:0806 32303631        	    38:         .string "2061"
00:080A 00
00:080B 0000            	    39: :       .word 0
                        	    40: 
                        	    41: start:
00:080D 4C1308          	    42:     jmp install
00:0810 4C7908          	    43:     jmp deinstall
                        	    44: 
                        	    45: install:                ;install the raster routine
00:0813 202209          	    46:     jsr restore         ;disable the Restore key (disable NMI interrupts)
                        	    47: checkirq:
00:0816 AD1403          	    48:     lda cinv            ;check the original IRQ vector
00:0819 AE1503          	    49:     ldx cinv+1          ;(to avoid multiple installation)
00:081C C99A            	    50:     cmp #<irq1
00:081E D004            	    51:     bne irqinit
00:0820 E008            	    52:     cpx #>irq1
00:0822 F011            	    53:     beq skipinit
                        	    54: irqinit:
00:0824 78              	    55:     sei
00:0825 8DBE08          	    56:     sta oldirq          ;store the old IRQ vector
00:0828 8EBF08          	    57:     stx oldirq+1
00:082B A99A            	    58:     lda #<irq1
00:082D A208            	    59:     ldx #>irq1
00:082F 8D1403          	    60:     sta cinv            ;set the new interrupt vector
00:0832 8E1503          	    61:     stx cinv+1
                        	    62: skipinit:
00:0835 A91B            	    63:     lda #$1b
00:0837 8D11D0          	    64:     sta scroly          ;set the raster interrupt location
00:083A A934            	    65:     lda #raslin
00:083C 8D12D0          	    66:     sta raster
00:083F A20E            	    67:     ldx #$e
00:0841 18              	    68:     clc
00:0842 6903            	    69:     adc #3
00:0844 A8              	    70:     tay
00:0845 A900            	    71:     lda #0
00:0847 85FB            	    72:     sta m
                        	    73: :
00:0849 A5FB            	    74:     lda m
00:084B 9D00D0          	    75:     sta $d000,x         ;set the sprite X
00:084E 6918            	    76:     adc #24
00:0850 85FB            	    77:     sta m
00:0852 98              	    78:     tya
00:0853 9D01D0          	    79:     sta $d001,x         ;and Y coordinates
00:0856 A928            	    80:     lda #sp0def/64
00:0858 9DF807          	    81:     sta sp0ptr,x        ;and sprite pointers
00:085B CA              	    82:     dex
00:085C CA              	    83:     dex
00:085D 10EA            	    84:     bpl :-
00:085F A97F            	    85:     lda #$7f
00:0861 8D0DDC          	    86:     sta ci1icr          ;disable timer interrupts
00:0864 8D0DDD          	    87:     sta ci2icr
00:0867 A201            	    88:     ldx #1
00:0869 8E1AD0          	    89:     stx irqmsk          ;enable raster interrupt
00:086C AD0DDC          	    90:     lda ci1icr          ;acknowledge CIA interrupts
00:086F 4E19D0          	    91:     lsr vicirq          ;and video interrupts
00:0872 A0FF            	    92:     ldy #$ff
00:0874 8C15D0          	    93:     sty spena           ;turn on all sprites
00:0877 58              	    94:     cli
00:0878 60              	    95:     rts
                        	    96: 
                        	    97: deinstall:
00:0879 78              	    98:     sei                 ;disable interrupts
00:087A A91B            	    99:     lda #$1b
00:087C 8D11D0          	   100:     sta scroly          ;restore text screen mode
00:087F A981            	   101:     lda #$81
00:0881 8D0DDC          	   102:     sta ci1icr          ;enable timer A interrupts on CIA 1
00:0884 A900            	   103:     lda #0
00:0886 8D1AD0          	   104:     sta irqmsk          ;disable raster interrupts
00:0889 ADBE08          	   105:     lda oldirq
00:088C 8D1403          	   106:     sta cinv            ;restore old IRQ vector
00:088F ADBF08          	   107:     lda oldirq+1
00:0892 8D1503          	   108:     sta cinv+1
00:0895 2C0DDD          	   109:     bit ci2icr          ;re-enable NMI interrupts
00:0898 58              	   110:     cli
00:0899 60              	   111:     rts
                        	   112: 
                        	   113:     ;;  Auxiliary raster interrupt (for synchronization)
                        	   114: irq1:
                        	   115:     ;;  irq (event)   ; > 7 + at least 2 cycles of last instruction (9 to 16 total)
                        	   116:     ;;  pha           ; 3
                        	   117:     ;;  txa           ; 2
                        	   118:     ;;  pha           ; 3
                        	   119:     ;;  tya           ; 2
                        	   120:     ;;  pha           ; 3
                        	   121:     ;;  tsx           ; 2
                        	   122:     ;;  lda $0104,x   ; 4
                        	   123:     ;;  and #xx       ; 2
                        	   124:     ;;  beq           ; 3
                        	   125:     ;;  jmp (cinv)    ; 5
                        	   126:     ;;  ---
                        	   127:     ;;  38 to 45 cycles delay at this stage
00:089A A9C0            	   128:     lda #<irq2
00:089C 8D1403          	   129:     sta cinv
00:089F A908            	   130:     lda #>irq2
00:08A1 8D1503          	   131:     sta cinv+1
00:08A4 EA              	   132:     nop                 ;waste at least 12 cycles
00:08A5 EA              	   133:     nop                 ;(up to 64 cycles delay allowed here)
00:08A6 EA              	   134:     nop
00:08A7 EA              	   135:     nop
00:08A8 EA              	   136:     nop
00:08A9 EA              	   137:     nop
00:08AA EE12D0          	   138:     inc raster          ;at this stage, raster has already been incremented by one
00:08AD A901            	   139:     lda #1
00:08AF 8D19D0          	   140:     sta vicirq          ;acknowledge the first raster interrupt
00:08B2 58              	   141:     cli                 ;enable interrupts (the second interrupt can now occur)
00:08B3 A009            	   142:     ldy #9
00:08B5 88              	   143: :   dey
00:08B6 D0FD            	   144:     bne :-              ;delay
00:08B8 EA              	   145:     nop                 ;the second interrupt will occur while executing these
00:08B9 EA              	   146:     nop                 ;two-cycle instructions
00:08BA EA              	   147:     nop
00:08BB EA              	   148:     nop
00:08BC EA              	   149:     nop
                        	   150: oldirq: .equ * + 1      ;placeholder for self-modifying code
00:08BD 4CBD08          	   151:     jmp *               ;return to the original interrupt
                        	   152: 
                        	   153:     ;;  Main raster interrupt
                        	   154: irq2:
                        	   155:     ;;  irq (event)   ; 7 + 2 or 3 cycles of last instruction (9 or 10 total)
                        	   156:     ;;  pha           ; 3
                        	   157:     ;;  txa           ; 2
                        	   158:     ;;  pha           ; 3
                        	   159:     ;;  tya           ; 2
                        	   160:     ;;  pha           ; 3
                        	   161:     ;;  tsx           ; 2
                        	   162:     ;;  lda $0104,x   ; 4
                        	   163:     ;;  and #xx       ; 2
                        	   164:     ;;  beq           ; 3
                        	   165:     ;;  jmp (cinv)    ; 5
                        	   166:     ;;  ---
                        	   167:     ;;  38 or 39 cycles delay at this stage
00:08C0 A99A            	   168:     lda #<irq1
00:08C2 8D1403          	   169:     sta cinv
00:08C5 A908            	   170:     lda #>irq1
00:08C7 8D1503          	   171:     sta cinv+1
00:08CA AE12D0          	   172:     ldx raster
00:08CD EA              	   173:     nop
                        	   174:     if CYCLES - 63
                        	   175:     if CYCLES - 64
                        	   176:     nop                 ;6567R8, 65 cycles/line
                        	   177:     bit $24
                        	   178:     else
                        	   179:     nop                 ;6567R56A, 64 cycles/line
                        	   180:     nop
                        	   181:     endif
                        	   182:     else
00:08CE 2424            	   183:     bit $24             ;6569, 63 cycles/line
                        	   184:     endif
00:08D0 EC12D0          	   185:     cpx raster          ;the comparison cycle is executed CYCLES or CYCLES+1 cycles
                        	   186:                         ;after the interrupt has occurred
00:08D3 F000            	   187:     beq *+2             ;delay by one cycle if raster hadn't changed
                        	   188:     ;;  Now exactly CYCLES+3 cycles have passed since the interrupt
00:08D5 CA              	   189:     dex
00:08D6 CA              	   190:     dex
00:08D7 8E12D0          	   191:     stx raster          ;restore original raster interrupt position
00:08DA A201            	   192:     ldx #1
00:08DC 8E19D0          	   193:     stx vicirq          ;acknowledge the raster interrupt
00:08DF A202            	   194:     ldx #2
00:08E1 CA              	   195: :   dex
00:08E2 D0FD            	   196:     bne :-              ;delay
00:08E4 EA              	   197:     nop
00:08E5 EA              	   198:     nop
00:08E6 A914            	   199:     lda #20             ;set the amount of raster lines-1 for the loop
00:08E8 85FB            	   200:     sta m
00:08EA A2C8            	   201:     ldx #$c8
                        	   202: irqloop:
00:08EC A002            	   203:     ldy #2
00:08EE 88              	   204: :   dey
00:08EF D0FD            	   205:     bne :-              ;delay
00:08F1 CE16D0          	   206:     dec scrolx          ;narrow the screen (exact timing required)
                        	   207:     ;; 3s4s5s6s7srrrrrgggggggggggggggggggggggggggggggggggggggg--||0s1s2s Phi-1 VIC-II
                        	   208:     ;; ssssssssss                                               ||ssssss Phi-2 VIC-II
                        	   209:     ;; ==========xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx||XXX====== Phi-2 6510
                        	   210:     ;;           ^ now we are here
00:08F4 8E16D0          	   211:     stx scrolx          ;expand the screen
                        	   212:     if CYCLES - 63
                        	   213:     if CYCLES - 64
                        	   214:     bit $24             ;6567R8
                        	   215:     else
                        	   216:     nop                 ;6567R56A
                        	   217:     endif
                        	   218:     else
00:08F7 EA              	   219:     nop                 ;6569
                        	   220:     endif
00:08F8 C6FB            	   221:     dec m
00:08FA 3023            	   222:     bmi endirq
00:08FC 18              	   223:     clc
00:08FD AD11D0          	   224:     lda scroly
00:0900 ED12D0          	   225:     sbc raster
00:0903 2907            	   226:     and #7
00:0905 D0E5            	   227:     bne irqloop         ;this instruction takes 4 cycles instead of 3
                        	   228:                         ;because the page boundary is crossed
                        	   229: badline:
00:0907 C6FB            	   230:     dec m
00:0909 EA              	   231:     nop
00:090A EA              	   232:     nop
00:090B EA              	   233:     nop
00:090C EA              	   234:     nop
00:090D CE16D0          	   235:     dec scrolx
                        	   236:     ;; 3s4s5s6s7srrrrrgggggggggggggggggggggggggggggggggggggggg--||0s1s2s Phi-1 VIC-II
                        	   237:     ;; ssssssssss    cccccccccccccccccccccccccccccccccccccccc   ||ssssss Phi-2 VIC-II
                        	   238:     ;; ==========xXXX========================================||***====== Phi-2 6510
                        	   239:     ;;           ^ we are here
00:0910 8E16D0          	   240:     stx scrolx
                        	   241:     ;; 3s4s5s6s7srrrrrgggggggggggggggggggggggggggggggggggggggg--||0s1s2s Phi-1 VIC-II
                        	   242:     ;; ssssssssss                                               ||ssssss Phi-2 VIC-II
                        	   243:     ;; ==========xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx||XXX====== Phi-2 6510
                        	   244:     ;;           ^ ^^- we are here (6569)
                        	   245:     ;;           | \- or here (6567R56A)
                        	   246:     ;;           \- or here (6567R8)
00:0913 A002            	   247:     ldy #2
00:0915 88              	   248: :   dey
00:0916 D0FD            	   249:     bne :-              ;delay
00:0918 EA              	   250:     nop
00:0919 EA              	   251:     nop
                        	   252:     if CYCLES - 63
                        	   253:     if CYCLES - 64
                        	   254:     nop                 ;6567R8, 65 cycles/line
                        	   255:     nop
                        	   256:     nop
                        	   257:     else
                        	   258:     bit $24             ;6567R56A, 64 cycles/line
                        	   259:     endif
                        	   260:     else
00:091A EA              	   261:     nop                 ;6569, 63 cycles/line
                        	   262:     endif
00:091B C6FB            	   263:     dec m
00:091D 10CD            	   264:     bpl irqloop         ;this is a 4-cycle branch (page boundary crossed)
                        	   265: endirq:
00:091F 4C81EA          	   266:     jmp $ea81           ;return to the auxiliary raster interrupt
                        	   267: 
                        	   268: restore:                ;disable the Restore key
00:0922 AD1803          	   269:     lda cnmi
00:0925 AC1903          	   270:     ldy cnmi+1
00:0928 48              	   271:     pha
00:0929 A947            	   272:     lda #<nmi           ;set the NMI vector
00:092B 8D1803          	   273:     sta cnmi
00:092E A909            	   274:     lda #>nmi
00:0930 8D1903          	   275:     sta cnmi+1
00:0933 A281            	   276:     ldx #$81
00:0935 8E0DDD          	   277:     stx ci2icr          ;enable CIA 2 Timer A interrupt
00:0938 A200            	   278:     ldx #0
00:093A 8E05DD          	   279:     stx ti2ahi
00:093D E8              	   280:     inx
00:093E 8E04DD          	   281:     stx ti2alo          ;prepare Timer A to count from 1 to 0
00:0941 A2DD            	   282:     ldx #$dd
00:0943 8E0EDD          	   283:     stx ci2cra          ;cause an interrupt
                        	   284: nmi: .equ * + 1
00:0946 A940            	   285:     lda #$40            ;RTI placeholder
00:0948 68              	   286:     pla
00:0949 8D1803          	   287:     sta cnmi
00:094C 8C1903          	   288:     sty cnmi+1          ;restore original NMI vector (although it won't be used)
00:094F 60              	   289:     rts
                        	   290: 
                        	   291:         ;; Sprite shape definitions
                        	   292:         .align 8
00:0A00 FF              	   293: sp0def: .blk 57,$ff
00:0A01 *
00:0A39 00              	   294:         .blk 6,$00
00:0A3A *
                        	   295:         .align 8
                        	   296: 


Symbols by name:
badline                          A:0907
basic                            A:0801
checkirq                         A:0816
ci1icr                           E:DC0D
ci2cra                           E:DD0E
ci2icr                           E:DD0D
cia1                             E:DC00
cia2                             E:DD00
cinv                             E:0314
cnmi                             E:0318
CYCLES                           E:003F
deinstall                        A:0879
endirq                           A:091F
install                          A:0813
irq1                             A:089A
irq2                             A:08C0
irqinit                          A:0824
irqloop                          A:08EC
irqmsk                           E:D01A
m                                E:00FB
nmi                              E:0947
oldirq                           E:08BE
raslin                           E:0034
raster                           E:D012
restore                          A:0922
scrolx                           E:D016
scroly                           E:D011
skipinit                         A:0835
sp0def                           A:0A00
sp0ptr                           E:07F8
spena                            E:D015
start                            A:080D
ti2ahi                           E:DD05
ti2alo                           E:DD04
vic                              E:D000
vicirq                           E:D019

Symbols by value:
0034 raslin
003F CYCLES
00FB m
0314 cinv
0318 cnmi
07F8 sp0ptr
0801 basic
080D start
0813 install
0816 checkirq
0824 irqinit
0835 skipinit
0879 deinstall
089A irq1
08BE oldirq
08C0 irq2
08EC irqloop
0907 badline
091F endirq
0922 restore
0947 nmi
0A00 sp0def
D000 vic
D011 scroly
D012 raster
D015 spena
D016 scrolx
D019 vicirq
D01A irqmsk
DC00 cia1
DC0D ci1icr
DD00 cia2
DD04 ti2alo
DD05 ti2ahi
DD0D ci2icr
DD0E ci2cra
