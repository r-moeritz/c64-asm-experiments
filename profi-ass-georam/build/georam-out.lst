Sections:
00: "org0001:c000" (C000-C1B7)


Source: "src/georam-out.asm"
                        	     1:         ;; GEOram output module for Profi-Ass v2
                        	     2:         ;; -------------------------------------
                        	     3:         ;; A plugin for Profi-Ass v2 to emit object code to GEOram.
                        	     4:         ;; Also provides a routine to copy to C64 memory.
                        	     5:         ;; 
                        	     6:         ;; Format:
                        	     7:         ;; +-------------+---------------+-------------+
                        	     8:         ;; |    WORD     |     WORD      |             |
                        	     9:         ;; | data length | start address | object code |
                        	    10:         ;; +-------------+---------------+-------------+
                        	    11:         ;;
                        	    12:         ;; Assemble to GEOram:
                        	    13:         ;;   .OPT P,O=$C000
                        	    14:         ;; 
                        	    15:         ;; Later, you may want to copy the object code to C64 memory:
                        	    16:         ;;   SYS49296
                        	    17: 
                        	    18:         ;; Constants
                        	    19: FIRST_BLOCK:    .equ 0          ;GEOram block at which to start writing data
                        	    20: PA_START:       .equ $80        ;pa_len value indicating start of assembly
                        	    21: PA_STOP:        .equ $c0        ;pa_len value indicating end of assembly
                        	    22: MAX_PAGE:       .equ 64         ;last GEOram page +1
                        	    23: MAX_BLOCK:      .equ 32         ;last GEOram block +1
                        	    24: 
                        	    25:         ;; OS routines
                        	    26: newline:        .equ $aad7      ;print CRLF        
                        	    27: strout:         .equ $ab1e      ;print 0 terminated string in A (lo) and Y (hi)
                        	    28: linprt:         .equ $bdcd      ;print 16-bit integer in X (lo) and A (hi)
                        	    29:         
                        	    30:         ;; GEOram registers
                        	    31: georam:         .equ $de00      ;first address mapped to GEOram
                        	    32: geoblock:       .equ $dfff      ;16K GEOram block selection register
                        	    33: geopage:        .equ $dffe      ;GEOram page selection register
                        	    34: 
                        	    35:         ;; Profi-Ass variables to read
                        	    36: pa_op:          .ezp $4b        ;BYTEx3 buffer containing first 3 bytes
                        	    37: pa_len:         .ezp $4e        ;BYTE number of bytes to emit -1
                        	    38: pa_adr:         .ezp $56        ;WORD object code starting address
                        	    39: pa_buf:         .equ $015b      ;buffer for remaining bytes beyond first 3
                        	    40: 
                        	    41:         ;; Working memory
                        	    42: datalen:        .ezp $a3        ;WORD total bytes written or left to copy
                        	    43: curblock:       .ezp $a5        ;BYTE current GEOram block (0-31)
                        	    44: curpage:        .ezp $a6        ;BYTE current GEOram page (0-63)
                        	    45: offset:         .ezp $a7        ;BYTE offset within page ($00-$ff)
                        	    46: c64addr:        .ezp $a7        ;WORD address to copy to in C64 main memory
                        	    47: 
                        	    48:         ;; Write object code to GEOram.
                        	    49:         ;; Called by Profi-Ass!
                        	    50:         ;; ----------------------------
                        	    51:         .org $c000
00:C000 A54E            	    52: write:  lda pa_len
00:C002 C9C0            	    53:         cmp #PA_STOP
00:C004 F060            	    54:         beq finwrt
00:C006 C980            	    55:         cmp #PA_START
00:C008 F048            	    56:         beq start
00:C00A A000            	    57:         ldy #0
00:C00C A6A7            	    58:         ldx offset
00:C00E B94B00          	    59: out:    lda pa_op,y
00:C011 9D00DE          	    60: out1:   sta georam,x
00:C014 20F5C0          	    61:         jsr incdatalen          ;increment total bytes written
00:C017 E8              	    62:         inx
00:C018 7011            	    63:         bvs nextpage            ;overflow? next page!
00:C01A 86A7            	    64:         stx offset
00:C01C C44E            	    65: chklen: cpy pa_len
00:C01E F045            	    66:         beq return
00:C020 C8              	    67:         iny
00:C021 C003            	    68:         cpy #3
00:C023 90E9            	    69:         bcc out
00:C025 B95801          	    70:         lda pa_buf-3,y
00:C028 4C11C0          	    71:         jmp out1
                        	    72: nextpage:
00:C02B A200            	    73:         ldx #0
00:C02D 86A7            	    74:         stx offset
00:C02F E6A6            	    75:         inc curpage
00:C031 A5A6            	    76:         lda curpage
00:C033 C940            	    77:         cmp #MAX_PAGE
00:C035 F006            	    78:         beq nextblock           ;past page 63? next block!
00:C037 8DFEDF          	    79:         sta geopage
00:C03A 4C1CC0          	    80:         jmp chklen
                        	    81: nextblock:
00:C03D A900            	    82:         lda #0
00:C03F 85A6            	    83:         sta curpage
00:C041 8DFEDF          	    84:         sta geopage
00:C044 E6A5            	    85:         inc curblock
00:C046 A5A5            	    86:         lda curblock
00:C048 C920            	    87:         cmp #MAX_BLOCK
00:C04A F039            	    88:         beq enomem
00:C04C 8DFFDF          	    89:         sta geoblock
00:C04F 4C1CC0          	    90:         jmp chklen
00:C052 20DEC0          	    91: start:  jsr init
00:C055 A6A7            	    92:         ldx offset
00:C057 A556            	    93:         lda pa_adr
00:C059 9D00DE          	    94:         sta georam,x
00:C05C E8              	    95:         inx
00:C05D A557            	    96:         lda pa_adr+1
00:C05F 9D00DE          	    97:         sta georam,x
00:C062 E8              	    98:         inx
00:C063 86A7            	    99:         stx offset
00:C065 60              	   100: return: rts        
                        	   101:         ;; Write data length to first word in first block of GEOram
00:C066 A900            	   102: finwrt: lda #FIRST_BLOCK
00:C068 8DFFDF          	   103:         sta geoblock
00:C06B 85A5            	   104:         sta curblock
00:C06D A900            	   105:         lda #0
00:C06F 8DFEDF          	   106:         sta geopage
00:C072 85A6            	   107:         sta curpage
00:C074 A200            	   108:         ldx #0
00:C076 B5A3            	   109:         lda datalen,x
00:C078 9D00DE          	   110:         sta georam,x
00:C07B E8              	   111:         inx
00:C07C B5A3            	   112:         lda datalen,x
00:C07E 9D00DE          	   113:         sta georam,x
00:C081 2003C1          	   114:         jsr print_write_summary
00:C084 60              	   115:         rts
00:C085 20D7AA          	   116: enomem: jsr newline
00:C088 A99B            	   117:         lda #<outofmem
00:C08A A0C1            	   118:         ldy #>outofmem
00:C08C 201EAB          	   119:         jsr strout
00:C08F 60              	   120:         rts
                        	   121: 
                        	   122:         ;; Copy object code from GEOram to C64.
                        	   123:         ;; ------------------------------------
                        	   124:         .align 4
00:C090 20DEC0          	   125: read:   jsr init
00:C093 204AC1          	   126:         jsr readheader
00:C096 E8              	   127:         inx
                        	   128:         ;; Copy loop
00:C097 A000            	   129:         ldy #0
00:C099 BD00DE          	   130: rloop:  lda georam,x
00:C09C 91A7            	   131:         sta (c64addr),y
00:C09E 202EC1          	   132:         jsr decdatalen
00:C0A1 A5A3            	   133:         lda datalen
00:C0A3 F032            	   134:         beq fincpy
00:C0A5 C8              	   135:         iny
00:C0A6 7006            	   136:         bvs incadr
00:C0A8 E8              	   137: chkpg:  inx
00:C0A9 7009            	   138:         bvs nxpag
00:C0AB 4C99C0          	   139:         jmp rloop
00:C0AE 203CC1          	   140: incadr: jsr inc64addr
00:C0B1 4CA8C0          	   141:         jmp chkpg
00:C0B4 E6A6            	   142: nxpag:  inc curpage
00:C0B6 A5A6            	   143:         lda curpage
00:C0B8 C940            	   144:         cmp #MAX_PAGE
00:C0BA F006            	   145:         beq nxblk               ;past page 63? next block!
00:C0BC 8DFEDF          	   146:         sta geopage
00:C0BF 4C99C0          	   147:         jmp rloop
00:C0C2 A900            	   148: nxblk:  lda #0
00:C0C4 85A6            	   149:         sta curpage
00:C0C6 8DFEDF          	   150:         sta geopage
00:C0C9 E6A5            	   151:         inc curblock
00:C0CB A5A5            	   152:         lda curblock
00:C0CD C920            	   153:         cmp #MAX_BLOCK
00:C0CF F0B4            	   154:         beq enomem
00:C0D1 8DFFDF          	   155:         sta geoblock
00:C0D4 4C99C0          	   156:         jmp rloop
00:C0D7 204AC1          	   157: fincpy: jsr readheader
00:C0DA 2015C1          	   158:         jsr print_copy_summary
00:C0DD 60              	   159:         rts
                        	   160:         
                        	   161:         ;; Routine to initialize GEOram registers & working memory
00:C0DE A900            	   162: init:   lda #FIRST_BLOCK
00:C0E0 8DFFDF          	   163:         sta geoblock
00:C0E3 85A5            	   164:         sta curblock
00:C0E5 A900            	   165:         lda #0
00:C0E7 8DFEDF          	   166:         sta geopage
00:C0EA 85A6            	   167:         sta curpage
00:C0EC 85A3            	   168:         sta datalen
00:C0EE 85A4            	   169:         sta datalen+1        
00:C0F0 A902            	   170:         lda #2                  ;set offset to 2 to leave space for data length
00:C0F2 85A7            	   171:         sta offset
00:C0F4 60              	   172:         rts
                        	   173:         
                        	   174:         ;; Routine to increment data length
                        	   175: incdatalen:
00:C0F5 18              	   176:         clc
00:C0F6 A5A3            	   177:         lda datalen
00:C0F8 6901            	   178:         adc #1
00:C0FA 85A3            	   179:         sta datalen
00:C0FC A5A4            	   180:         lda datalen+1
00:C0FE 6900            	   181:         adc #0
00:C100 85A4            	   182:         sta datalen+1
00:C102 60              	   183:         rts
                        	   184: 
                        	   185:         ;; Routine to print summary of data written
                        	   186: print_write_summary:
00:C103 20D7AA          	   187:         jsr newline
00:C106 A6A3            	   188:         ldx datalen
00:C108 A5A4            	   189:         lda datalen+1
00:C10A 20CDBD          	   190:         jsr linprt
00:C10D A964            	   191:         lda #<write_summary
00:C10F A0C1            	   192:         ldy #>write_summary
00:C111 201EAB          	   193:         jsr strout
00:C114 60              	   194:         rts
                        	   195: 
                        	   196:         ;; Routine to print summary of data copied
                        	   197: print_copy_summary:
00:C115 20D7AA          	   198:         jsr newline
00:C118 A6A3            	   199:         ldx datalen
00:C11A A5A4            	   200:         lda datalen+1
00:C11C 20CDBD          	   201:         jsr linprt
00:C11F A97D            	   202:         lda #<copy_summary
00:C121 A0C1            	   203:         ldy #>copy_summary
00:C123 201EAB          	   204:         jsr strout
00:C126 A6A7            	   205:         ldx c64addr
00:C128 A5A8            	   206:         lda c64addr+1
00:C12A 20CDBD          	   207:         jsr linprt
00:C12D 60              	   208:         rts
                        	   209: 
                        	   210:         ;; Routine to decrement data length
                        	   211: decdatalen:
00:C12E 38              	   212:         sec
00:C12F A5A3            	   213:         lda datalen
00:C131 E901            	   214:         sbc #1
00:C133 85A3            	   215:         sta datalen
00:C135 A5A4            	   216:         lda datalen+1
00:C137 E900            	   217:         sbc #0
00:C139 85A4            	   218:         sta datalen+1
00:C13B 60              	   219:         rts
                        	   220: 
                        	   221:         ;; Routine to increment C64 address
                        	   222: inc64addr:
00:C13C 18              	   223:         clc
00:C13D A5A7            	   224:         lda c64addr
00:C13F 6901            	   225:         adc #1
00:C141 85A7            	   226:         sta c64addr
00:C143 A5A8            	   227:         lda c64addr+1
00:C145 6900            	   228:         adc #0
00:C147 85A8            	   229:         sta c64addr+1
00:C149 60              	   230:         rts
                        	   231: 
                        	   232:         ;; Routine to read data length & C64 address from GEOram
                        	   233: readheader:
00:C14A A200            	   234:         ldx #0
                        	   235:         ;; Read data length
00:C14C BD00DE          	   236:         lda georam,x
00:C14F 85A3            	   237:         sta datalen
00:C151 E8              	   238:         inx
00:C152 BD00DE          	   239:         lda georam,x
00:C155 85A4            	   240:         sta datalen+1
00:C157 E8              	   241:         inx
                        	   242:         ;; Read C64 address
00:C158 BD00DE          	   243:         lda georam,x
00:C15B 85A7            	   244:         sta c64addr
00:C15D E8              	   245:         inx
00:C15E BD00DE          	   246:         lda georam,x
00:C161 85A8            	   247:         sta c64addr+1
00:C163 60              	   248:         rts
                        	   249:         
                        	   250: write_summary:
00:C164 2042595445532057	   251:         .string " BYTES WRITTEN TO GEORAM"
00:C16C 52495454454E2054
00:C174 4F2047454F52414D
00:C17C 00
                        	   252: 
                        	   253: copy_summary:
00:C17D 2042595445532043	   254:         .string " BYTES COPIED FROM GEORAM TO "
00:C185 4F50494544204652
00:C18D 4F4D2047454F5241
00:C195 4D20544F20
00:C19A 00
                        	   255: 
                        	   256: outofmem:
00:C19B 4552524F523A2047	   257:         .string "ERROR: GEORAM OUT OF MEMORY"
00:C1A3 454F52414D204F55
00:C1AB 54204F46204D454D
00:C1B3 4F5259
00:C1B6 00
                        	   258: 


Symbols by name:
c64addr                          E:00A7
chklen                           A:C01C
chkpg                            A:C0A8
copy_summary                     A:C17D
curblock                         E:00A5
curpage                          E:00A6
datalen                          E:00A3
decdatalen                       A:C12E
enomem                           A:C085
fincpy                           A:C0D7
finwrt                           A:C066
FIRST_BLOCK                      E:0000
geoblock                         E:DFFF
geopage                          E:DFFE
georam                           E:DE00
inc64addr                        A:C13C
incadr                           A:C0AE
incdatalen                       A:C0F5
init                             A:C0DE
linprt                           E:BDCD
MAX_BLOCK                        E:0020
MAX_PAGE                         E:0040
newline                          E:AAD7
nextblock                        A:C03D
nextpage                         A:C02B
nxblk                            A:C0C2
nxpag                            A:C0B4
offset                           E:00A7
out                              A:C00E
out1                             A:C011
outofmem                         A:C19B
pa_adr                           E:0056
pa_buf                           E:015B
pa_len                           E:004E
pa_op                            E:004B
PA_START                         E:0080
PA_STOP                          E:00C0
print_copy_summary               A:C115
print_write_summary              A:C103
read                             A:C090
readheader                       A:C14A
return                           A:C065
rloop                            A:C099
start                            A:C052
strout                           E:AB1E
write                            A:C000
write_summary                    A:C164

Symbols by value:
0000 FIRST_BLOCK
0020 MAX_BLOCK
0040 MAX_PAGE
004B pa_op
004E pa_len
0056 pa_adr
0080 PA_START
00A3 datalen
00A5 curblock
00A6 curpage
00A7 c64addr
00A7 offset
00C0 PA_STOP
015B pa_buf
AAD7 newline
AB1E strout
BDCD linprt
C000 write
C00E out
C011 out1
C01C chklen
C02B nextpage
C03D nextblock
C052 start
C065 return
C066 finwrt
C085 enomem
C090 read
C099 rloop
C0A8 chkpg
C0AE incadr
C0B4 nxpag
C0C2 nxblk
C0D7 fincpy
C0DE init
C0F5 incdatalen
C103 print_write_summary
C115 print_copy_summary
C12E decdatalen
C13C inc64addr
C14A readheader
C164 write_summary
C17D copy_summary
C19B outofmem
DE00 georam
DFFE geopage
DFFF geoblock
